// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/blocks": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Block"
                ],
                "summary": "Get latest N blocks (without txn hash)",
                "parameters": [
                    {
                        "type": "number",
                        "description": "The number of blocks to get",
                        "name": "n",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.BlocksResponse"
                        }
                    }
                }
            }
        },
        "/blocks/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Block"
                ],
                "summary": "Get block information from a block number (with txn hash)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The block number",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.SingleBlockResponse"
                        }
                    }
                }
            }
        },
        "/transaction/{txHash}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction information from a transaction hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The transaction hash",
                        "name": "txHash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.TxnResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Block": {
            "type": "object",
            "properties": {
                "block_hash": {
                    "type": "string"
                },
                "block_num": {
                    "type": "integer"
                },
                "block_time": {
                    "type": "integer"
                },
                "parent_hash": {
                    "type": "string"
                }
            }
        },
        "services.BlocksResponse": {
            "type": "object",
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Block"
                    }
                }
            }
        },
        "services.SingleBlockResponse": {
            "type": "object",
            "properties": {
                "block_hash": {
                    "type": "string"
                },
                "block_num": {
                    "type": "integer"
                },
                "block_time": {
                    "type": "integer"
                },
                "parent_hash": {
                    "type": "string"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "services.TxnReceiptLog": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                }
            }
        },
        "services.TxnResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.TxnReceiptLog"
                    }
                },
                "nonce": {
                    "type": "integer"
                },
                "to": {
                    "type": "string"
                },
                "tx_hash": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Ethereum Blockchain API Service",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
